bool isPossible(vector<int> &stalls, int k, int mid) {
    int cowCount = 1; 
    int lastPos = stalls[0]; 

    for (int i = 1; i < stalls.size(); i++) {
        if (stalls[i] - lastPos >= mid) {
            cowCount++;
            lastPos = stalls[i];
            if (cowCount == k) {
                return true;
            }
        }
    }
    return false;
}

int aggressiveCows(vector<int> &stalls, int k) {
    sort(stalls.begin(), stalls.end());
    
    int s = 0;
    int maxi = stalls.back();
    int e = maxi;
    int ans = -1;
    int mid = s + (e - s) / 2;

    while (s <= e) {
        if (isPossible(stalls, k, mid)) {
            ans = mid;
            s = mid + 1;
        } else {
            e = mid - 1;
        }
        mid = s + (e - s) / 2;
    }
    return ans;
}
